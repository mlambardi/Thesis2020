)
out <- xtable(out %>% select(-sims),
digits = c(0,1,rep(0,5)),
label=paste0("tab:",dir,"missing"),
caption = paste0("Non-convergence rate (\\%) in ", out$sims[1]," simulations."),
type = "latex")
print(out, file = paste0(dir, "/missing.tex"), include.rownames=FALSE)
out <- res %>%
group_by("$\\\\kappa$"=k, "$n$"=n) %>%
summarise(
PE=100*mean(is.na(ML.z1)),
NC=100*mean(is.na(modmle.z1)),
MU=100*mean(is.na(median.z1)),
BR=100*mean(is.na(mean.z1)),
sims=n()
)
out <- xtable(out %>% select(-sims),
digits = c(0,1,rep(0,5)),
label=paste0("tab:",dir,"missing"),
caption = paste0("Non-convergence rate (\\%) in ", out$sims[1]," simulations."),
type = "latex")
print(out, file = paste0(dir, "/missing.tex"), include.rownames=FALSE)
out <- res %>%
group_by("$\\\kappa$"=k, "$n$"=n) %>%
summarise(
PE=100*mean(is.na(ML.z1)),
NC=100*mean(is.na(modmle.z1)),
MU=100*mean(is.na(median.z1)),
BR=100*mean(is.na(mean.z1)),
sims=n()
)
out <- xtable(out %>% select(-sims),
digits = c(0,1,rep(0,5)),
label=paste0("tab:",dir,"missing"),
caption = paste0("Non-convergence rate (\\%) in ", out$sims[1]," simulations."),
type = "latex")
out <- res %>%
group_by("$\\\kappa$"=k, "$n$"=n) %>%
summarise(
PE=100*mean(is.na(ML.z1)),
NC=100*mean(is.na(modmle.z1)),
MU=100*mean(is.na(median.z1)),
BR=100*mean(is.na(mean.z1)),
sims=n()
)
res
#' Example: estimation of binomial regression - analysis of the results
rm(list=ls())
dir <- "output"
source("../colorblindpalette.R")
for (f in list.files(dir, pattern = "RData$", full.names = T)) {
load(f)
}
write(paste0("The values for $p/n$ were: ", paste(sort(unique(confs$k)), collapse = ", "),
"; the values for $n$ were: ", paste(sort(unique(confs$n)), collapse = ", "),
"; for each joint configuration of the two, ", nrow(res)/nrow(confs), " simulations were run."), file = paste0(dir, "/configs.tex"))
library(ggplot2)
library(dplyr)
thr <- 100
aux <- grepl("\\.z\\d+$", colnames(res))
summary(res[,aux])
res[,aux][abs(res[,aux]) > thr] <- NA
summary(is.na(res[,aux]))
aux <- c("z1","z2")
res2[,aux][abs(res2[,aux]) > thr] <- NA
summary(is.na(res2[,aux]))
res$n <- confs$n[res$config]
res$k <- confs$k[res$config]
res2$n <- confs$n[res2$config]
res2$k <- confs$k[res2$config]
sz <- 0.3
require(xtable)
out <- res %>%
group_by("$\\\kappa$"=k, "$n$"=n) %>%
summarise(
PE=100*mean(is.na(ML.z1)),
NC=100*mean(is.na(modmle.z1)),
MU=100*mean(is.na(median.z1)),
BR=100*mean(is.na(mean.z1)),
sims=n()
)
out <- res %>%
group_by("$\\\\kappa$"=k, "$n$"=n) %>%
summarise(
PE=100*mean(is.na(ML.z1)),
NC=100*mean(is.na(modmle.z1)),
MU=100*mean(is.na(median.z1)),
BR=100*mean(is.na(mean.z1)),
sims=n()
)
out <- xtable(out %>% select(-sims),
digits = c(0,1,rep(0,5)),
label=paste0("tab:",dir,"missing"),
caption = paste0("Non-convergence rate (\\%) in ", out$sims[1]," simulations."),
type = "latex")
print(out, file = paste0(dir, "/missing.tex"), include.rownames=FALSE)
out <- res %>%
group_by("Îº"=k, "n"=n) %>%
summarise(
PE=100*mean(is.na(ML.z1)),
NC=100*mean(is.na(modmle.z1)),
MU=100*mean(is.na(median.z1)),
BR=100*mean(is.na(mean.z1)),
sims=n()
)
out <- xtable(out %>% select(-sims),
digits = c(0,1,rep(1,5)),
label=paste0("tab:",dir,"missing"),
caption = paste0("Non-convergence rate (\\%) in ", out$sims[1]," simulations."),
type = "latex")
print(out, file = paste0(dir, "/missing.tex"), include.rownames=FALSE)
out <- res %>%
group_by("p/n"=k, "n"=n) %>%
summarise(
PE=100*mean(is.na(ML.z1)),
NC=100*mean(is.na(modmle.z1)),
MU=100*mean(is.na(median.z1)),
BR=100*mean(is.na(mean.z1)),
sims=n()
)
out <- xtable(out %>% select(-sims),
digits = c(0,1,rep(1,5)),
label=paste0("tab:",dir,"missing"),
caption = paste0("Non-convergence rate (\\%) in ", out$sims[1]," simulations."),
type = "latex")
print(out, file = paste0(dir, "/missing.tex"), include.rownames=FALSE)
dir <- "binomial"
library(pbapply)
library(brglm2nc)
library(parallel)
meths <- c("ML", "AS_mean", "AS_median", "AS_nc")
n.sims <- 1000
confs <- expand.grid(k=c(0.1,0.3,0.5), n=c(20, 50, 100))
confs$p <- confs$k*confs$n
set.seed(12345)
# beta0 = 0, betaj = 1, rescaling covariates so that V(xb)=1 E(xb)=0
Xmat <- list()
for (i in 1:nrow(confs)) {
conf <- confs[i,]
Xmat[[i]] <- with(conf, matrix(rnorm(p*n)/sqrt(p), ncol = p, nrow = n))
}
str(Xmat)
confs
rm(list=ls())
dir <- "output"
source("../colorblindpalette.R")
for (f in list.files(dir, pattern = "RData$", full.names = T)) {
load(f)
}
list.files(dir, pattern = "RData$", full.names = T)
res
rm(list=ls())
dir <- "output"
source("../colorblindpalette.R")
for (f in list.files(dir, pattern = "RData$", full.names = T)) {
load(f)
}
library(ggplot2)
library(dplyr)
thr <- 100
aux <- grepl("\\.z\\d+$", colnames(res))
summary(res[,aux])
res[,aux][abs(res[,aux]) > thr] <- NA
summary(is.na(res[,aux]))
aux <- c("z1","z2")
res2[,aux][abs(res2[,aux]) > thr] <- NA
summary(is.na(res2[,aux]))
res$n <- confs$n[res$config]
res$k <- confs$k[res$config]
res2$n <- confs$n[res2$config]
res2$k <- confs$k[res2$config]
sz <- 0.3
require(xtable)
out <- res %>%
group_by("p/n"=k, "n"=n) %>%
summarise(
PE=100*mean(is.na(ML.z1)),
NC=100*mean(is.na(modmle.z1)),
MU=100*mean(is.na(median.z1)),
BR=100*mean(is.na(mean.z1)),
sims=n()
)
out <- xtable(out %>% select(-sims),
digits = c(0,1,rep(1,5)),
label=paste0("tab:",dir,"missing"),
caption = paste0("Non-convergence rate (\\%) in ", out$sims[1]," simulations."),
type = "latex")
out <- res %>%
group_by("p/n"=k, "n"=n) %>%
summarise(
PE=100*mean(is.na(ML.z1)),
NC=100*mean(is.na(modmle.z1)),
MU=100*mean(is.na(median.z1)),
BR=100*mean(is.na(mean.z1)),
sims=n()
)
out <- xtable(out %>% select(-sims),
digits = c(0,1,rep(1,5)),
label=paste0("tab:binomialmoderatemissing"),
caption = paste0("Non-convergence rate (\\%) in ", out$sims[1]," simulations."),
type = "latex")
print(out, file = paste0(dir, "/missing.tex"), include.rownames=FALSE)
out <- res %>%
group_by("p/n"=k, "n"=n) %>%
summarise(
PE=100*mean(is.na(ML.z1)),
NC=100*mean(is.na(modmle.z1)),
MU=100*mean(is.na(median.z1)),
BR=100*mean(is.na(mean.z1)),
sims=n()
)
out <- xtable(out %>% select(-sims),
digits = c(1,0,rep(1,5)),
label=paste0("tab:binomialmoderatemissing"),
caption = paste0("Non-convergence rate (\\%) in ", out$sims[1]," simulations."),
type = "latex")
print(out, file = paste0(dir, "/missing.tex"), include.rownames=FALSE)
out <- res %>%
group_by("p/n"=k, "n"=n) %>%
summarise(
PE=100*mean(is.na(ML.z1)),
NC=100*mean(is.na(modmle.z1)),
MU=100*mean(is.na(median.z1)),
BR=100*mean(is.na(mean.z1)),
sims=n()
)
out <- xtable(out %>% select(-sims),
digits = c(1,0,rep(1,4)),
label=paste0("tab:binomialmoderatemissing"),
caption = paste0("Non-convergence rate (\\%) in ", out$sims[1]," simulations."),
type = "latex")
out <- res %>%
group_by("p/n"=k, "n"=n) %>%
summarise(
PE=100*mean(is.na(ML.z1)),
NC=100*mean(is.na(modmle.z1)),
MU=100*mean(is.na(median.z1)),
BR=100*mean(is.na(mean.z1)),
sims=n()
)
out <- xtable(out %>% select(-sims),
digits = c(1,0,rep(1,4)),
label=paste0("tab:binomialmoderatemissing"),
caption = paste0("Non-convergence rate (\\%) in ", out$sims[1]," simulations."),
type = "latex")
out <- res %>%
group_by("p/n"=k, "n"=n) %>%
summarise(
PE=100*mean(is.na(ML.z1)),
NC=100*mean(is.na(modmle.z1)),
MU=100*mean(is.na(median.z1)),
BR=100*mean(is.na(mean.z1)),
sims=n()
)
out <- xtable(out %>% select(-sims),
digits = c(1,1,0,rep(1,4)),
label=paste0("tab:binomialmoderatemissing"),
caption = paste0("Non-convergence rate (\\%) in ", out$sims[1]," simulations."),
type = "latex")
print(out, file = paste0(dir, "/missing.tex"), include.rownames=FALSE)
ggplot(res, aes(x=ML.z2, xend=ML.z2)) + facet_grid(k ~ n) + xlab("n") + ylab("p/n") + ggtitle("Wald Z") +
# geom_point(aes(y=median.z2-ML.z2, color="MU-PE" )) +
# geom_point(aes(y=modmle.z2-ML.z2, color="NC-PE")) +
# geom_point(aes(y=mean.z2-ML.z2, color="BR-PE")) +
# geom_abline(intercept = 0, slope = 1) +
geom_segment(aes(y=pmin(median.z2, modmle.z2, mean.z2)-ML.z2, yend=pmax(median.z2, modmle.z2, mean.z2)-ML.z2)) +
coord_fixed() +
scale_color_manual(values = cbPalette[-1])
res2$method
boxplot(data=res2)
boxplot(x=b1, data=res2)
ggplot(res2) +
facet_grid(k ~ n, labeller = function(...) label_both(..., sep=" = ")) +
xlab("theoretical") +
ylab("sample") +
geom_abline(intercept = 0, slope = 1) +
coord_fixed() +
geom_boxplot(aes(sample=b2, color="PE"), geom = "line") +
theme_bw() +
theme(legend.position = "top") +
scale_color_manual(values = cbPalette)
ggplot(res2) +
facet_grid(k ~ n, labeller = function(...) label_both(..., sep=" = ")) +
xlab("theoretical") +
ylab("sample") +
geom_abline(intercept = 0, slope = 1) +
coord_fixed() +
geom_boxplot(aes(x=b2, color="PE"), geom = "line") +
theme_bw() +
theme(legend.position = "top") +
scale_color_manual(values = cbPalette)
ggplot(res2) +
facet_grid(k ~ n, labeller = function(...) label_both(..., sep=" = ")) +
xlab("theoretical") +
ylab("sample") +
geom_abline(intercept = 0, slope = 1) +
coord_fixed() +
geom_boxplot(aes(x=b2, y=method, color="PE"), geom = "line") +
theme_bw() +
theme(legend.position = "top") +
scale_color_manual(values = cbPalette)
ggplot(res2) +
facet_grid(k ~ n, labeller = function(...) label_both(..., sep=" = ")) +
xlab("theoretical") +
ylab("sample") +
geom_abline(intercept = 0, slope = 1) +
coord_fixed() +
geom_boxplot(aes(x=b2, y=method, color=method), geom = "line") +
theme_bw() +
theme(legend.position = "top") +
scale_color_manual(values = cbPalette)
ggplot(res2) +
facet_grid(k ~ n, labeller = function(...) label_both(..., sep=" = ")) +
xlab("theoretical") +
ylab("sample") +
geom_abline(intercept = 0, slope = 1) +
geom_boxplot(aes(x=b2, y=method, color=method), geom = "line") +
theme_bw() +
theme(legend.position = "top") +
scale_color_manual(values = cbPalette)
res2 %>%
filter(abs(z2) < 5) %>%
ggplot() +
facet_grid(k ~ n, labeller = function(...) label_both(..., sep=" = ")) +
xlab("theoretical") +
ylab("sample") +
geom_abline(intercept = 0, slope = 1) +
geom_boxplot(aes(x=b2, y=method), geom = "line") +
theme_bw() +
theme(legend.position = "top") +
scale_color_manual(values = cbPalette)
res2 %>%
filter(abs(z2) < 3) %>%
ggplot() +
facet_grid(k ~ n, labeller = function(...) label_both(..., sep=" = ")) +
xlab("theoretical") +
ylab("sample") +
geom_abline(intercept = 0, slope = 1) +
geom_boxplot(aes(x=b2, y=method), geom = "line") +
theme_bw() +
theme(legend.position = "top") +
scale_color_manual(values = cbPalette)
res2 %>%
filter(abs(z2) < 3 & abs(b2) < 10) %>%
ggplot() +
facet_grid(k ~ n, labeller = function(...) label_both(..., sep=" = ")) +
xlab("theoretical") +
ylab("sample") +
geom_abline(intercept = 0, slope = 1) +
geom_boxplot(aes(x=b2, y=method), geom = "line") +
theme_bw() +
theme(legend.position = "top") +
scale_color_manual(values = cbPalette)
res2 %>%
filter(abs(z2) < 3 & abs(b2) < 20) %>%
ggplot() +
facet_grid(k ~ n, labeller = function(...) label_both(..., sep=" = ")) +
xlab("theoretical") +
ylab("sample") +
geom_abline(intercept = 0, slope = 1) +
geom_boxplot(aes(x=b2, y=method), geom = "line") +
theme_bw() +
theme(legend.position = "top") +
scale_color_manual(values = cbPalette)
res2 %>%
filter(abs(z2) < 3 & abs(b2) < 20) %>%
ggplot() +
facet_grid(k ~ n, labeller = function(...) label_both(..., sep=" = ")) +
xlab("theoretical") +
ylab("sample") +
geom_abline(intercept = 0, slope = 1) +
geom_boxplot(aes(x=sqrt(n)*b2, y=method), geom = "line") +
theme_bw() +
theme(legend.position = "top") +
scale_color_manual(values = cbPalette)
res2 %>%
filter(T) %>%
ggplot() +
facet_grid(k ~ n, labeller = function(...) label_both(..., sep=" = ")) +
xlab("theoretical") +
ylab("sample") +
geom_abline(intercept = 0, slope = 1) +
geom_boxplot(aes(x=sqrt(n)*b2, y=method), geom = "line") +
theme_bw() +
theme(legend.position = "top") +
scale_color_manual(values = cbPalette)
res2$n
res2 %>%
filter(abs(z2) < 4) %>%
ggplot() +
facet_grid(k ~ n, labeller = function(...) label_both(..., sep=" = ")) +
xlab("theoretical") +
ylab("sample") +
geom_abline(intercept = 0, slope = 1) +
geom_boxplot(aes(x=sqrt(n)*b2, y=method), geom = "line") +
theme_bw() +
theme(legend.position = "top") +
scale_color_manual(values = cbPalette)
res2 %>%
filter(abs(z2) < 4) %>%
ggplot() +
facet_grid(k ~ n, labeller = function(...) label_both(..., sep=" = ")) +
xlab("theoretical") +
ylab("sample") +
geom_abline(intercept = 0, slope = 1) +
geom_boxplot(aes(x=sqrt(n)*b2, y=method)) +
theme_bw() +
theme(legend.position = "top") +
scale_color_manual(values = cbPalette)
res2 %>%
filter(abs(z2) < 2) %>%
ggplot() +
facet_grid(k ~ n, labeller = function(...) label_both(..., sep=" = ")) +
xlab("theoretical") +
ylab("sample") +
geom_abline(intercept = 0, slope = 1) +
geom_boxplot(aes(x=sqrt(n)*b2, y=method)) +
theme_bw() +
theme(legend.position = "top") +
scale_color_manual(values = cbPalette)
res2 %>%
filter(abs(b2) < 20) %>%
ggplot() +
facet_grid(k ~ n, labeller = function(...) label_both(..., sep=" = ")) +
xlab("theoretical") +
ylab("sample") +
geom_abline(intercept = 0, slope = 1) +
geom_boxplot(aes(x=sqrt(n)*b2, y=method)) +
theme_bw() +
theme(legend.position = "top") +
scale_color_manual(values = cbPalette)
out <- res %>%
group_by("p/n"=k, "n"=n) %>%
summarise(
PE=mean(ML.b1, na.rm=T),
NC=mean(modmle.b1, na.rm=T),
MU=mean(median.b1, na.rm=T),
BR=mean(mean.b1, na.rm=T),
sims=n()
)
out
out <- res %>%
group_by("p/n"=k, "n"=n) %>%
summarise(
PE=mean(ML.b2, na.rm=T),
NC=mean(modmle.b2, na.rm=T),
MU=mean(median.b2, na.rm=T),
BR=mean(mean.b2, na.rm=T),
sims=n()
)
out
out <- res %>%
group_by("p/n"=k, "n"=n) %>%
summarise(
PE=mean(ML.b2, na.rm=T),
NC=mean(modmle.b2, na.rm=T),
MU=mean(median.b2, na.rm=T),
BR=mean(mean.b2, na.rm=T),
sims=n()
)
out <- xtable(out %>% select(-sims),
digits = c(1,1,0,rep(1,4)),
label=paste0("tab:binomialmoderatemissing"),
caption = paste0("Mean bias in finite estimates of first slope."),
type = "latex")
print(out, file = paste0(dir, "/bias.tex"), include.rownames=FALSE)
out <- res %>%
group_by("p/n"=k, "n"=n) %>%
summarise(
PE=mean(ML.b2, na.rm=T),
NC=mean(modmle.b2, na.rm=T),
MU=mean(median.b2, na.rm=T),
BR=mean(mean.b2, na.rm=T),
sPE=sd(ML.b2, na.rm=T),
sNC=sd(modmle.b2, na.rm=T),
sMU=sd(median.b2, na.rm=T),
sBR=sd(mean.b2, na.rm=T),
sims=n()
) %>%
mutate(`max. SE`=pmax(sPE, sNC, sMU, sBR)) %>%
select(-sPE, -sNC, -sMU, -sBR)
out
out <- res %>%
group_by("p/n"=k, "n"=n) %>%
summarise(
PE=mean(ML.b2, na.rm=T),
NC=mean(modmle.b2, na.rm=T),
MU=mean(median.b2, na.rm=T),
BR=mean(mean.b2, na.rm=T),
sPE=sd(ML.b2, na.rm=T),
sNC=sd(modmle.b2, na.rm=T),
sMU=sd(median.b2, na.rm=T),
sBR=sd(mean.b2, na.rm=T),
sims=n()
) %>%
mutate(`max. SE`=pmax(sPE, sNC, sMU, sBR)/sqrt(sims)) %>%
select(-sPE, -sNC, -sMU, -sBR)
out
out <- res %>%
group_by("p/n"=k, "n"=n) %>%
summarise(
PE=mean(ML.b2, na.rm=T),
NC=mean(modmle.b2, na.rm=T),
MU=mean(median.b2, na.rm=T),
BR=mean(mean.b2, na.rm=T),
sPE=sd(ML.b2, na.rm=T)/sqrt(n()),
sNC=sd(modmle.b2, na.rm=T)/sqrt(n()),
sMU=sd(median.b2, na.rm=T)/sqrt(n()),
sBR=sd(mean.b2, na.rm=T)/sqrt(n()),
sims=n()
)
out
